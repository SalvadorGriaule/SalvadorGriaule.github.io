---
import type { LinkSlice } from "../components/svelte/type";
import LogoLib from "../components/svelte/LogoLib.svelte";
import LinkBox from "../components/svelte/LinkBox.svelte";

interface Props {
  id: number;
  title: string;
  description: string;
  fw: ("svelte" | "vuejs" | "react")[];
  linkSlice: LinkSlice[][];
}

const { title, description, fw, linkSlice, id } = Astro.props;
---

<section
  id={"lib" + id}
  class="h-fit bg-linear-to-br from-neutral-300/30 to-neutral-500/30 rounded-md m-2 p-2 backdrop-blur-md"
>
  <div class="flex justify-between items-center mb-1">
    <h3 class="text-2xl font-semibold">{title}</h3>
    <button
      class="return flex justify-center items-center bg-red-800 border border-red-500 p-2 rounded-2xl text-white hover:bg-red-200 hover:text-red-800 duration-100"
    >
      <p>Retour â¤¾</p>
    </button>
  </div>
  <div
    class="relative flex flex-col justify-center items-center w-full bg-linear-to-br from-neutral-900/70 to-neutral-950/30 rounded-md p-10"
  >
    <div
      class="absolute left-12 top-1/2 -translate-1/2 bg-linear-to-br from-neutral-300/30 to-neutral-500/30 rounded-md ml-5 p-2 backdrop-blur-md"
    >
      <div
        class="switch relative flex flex-col items-center bg-linear-to-br from-neutral-700/60 to-neutral-800/40 rounded-md p-1"
      >
        <div
          class="switcher absolute op-0 left-1 m-1 w-24 h-24 rounded-md bg-linear-to-br from-neutral-300/40 to-neutral-400/30"
        >
        </div>
        {
          fw.map((elem) => (
            <div data-fw={elem} class="fw h-24">
              <LogoLib name={elem} mode="no-link" />
            </div>
          ))
        }
      </div>
    </div>
    <div class="slotCard">
      <slot />
    </div>
  </div>
  <div class="flex items-center">
    <p class="text-xl w-3/5">
      {description}
    </p>
    <div
      class="p-2 mt-2 w-2/5 flex flex-col items-start border-s-2 border-black"
    >
      <h5 class="text-2xl">Compatible avec</h5>
      <div class="flex flex-col justify-center my-3 space-y-2">
        {
          fw.map((item, i) => (
            <div class="flex items-center space-x-2">
              <LogoLib
                name={item}
                mode="no-link"
                classL={"h-[2.5em] w-[2.5em] mx-2.5"}
              />
              <LinkBox tabLink={linkSlice[i]} spanLink={false} />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>
<script>
  import { currentSelect } from "../assets/ts/nano";
  import { makeVisible } from "../assets/ts/misc";
  import anime from "animejs";

  currentSelect.listen((val) => {
    const cardId = document.getElementById(`lib${val}`);
    if (cardId) {
      const switchFw = cardId.querySelectorAll(".fw");
      const returnBtn = cardId.querySelector(".return");
      const slotCard = cardId.querySelector(".slotCard");
      const switcher = cardId.querySelector(".switcher");

      returnBtn.addEventListener("click", () => {
        currentSelect.set(null);
      });
      let i = 0;
      for (let btnFw of switchFw) {
        const fw = btnFw.dataset.fw;
        let j = i;
        btnFw.addEventListener("click", () => {
          anime({
            targets: switcher,
            translateY: j * 90 + "px",
            easing: "easeInOutQuint",
            duration: 500,
          });
          for (let slot of slotCard.children) {
            makeVisible(slot.classList.contains(fw), slot);
          }
        });
        i++
      }
    }
  });
</script>
