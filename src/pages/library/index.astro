---
import Layout from "../../layouts/Layout.astro";
import ShowCardLibrary from "../../layouts/ShowCardLibrary.astro";
// import Svelte
import LibraryPage from "../../components/svelte/Page/LibraryPage.svelte";
import HeaderNav from "../../components/svelte/HeaderNav.svelte";
import CircleCard from "../../components/svelte/CardLibrary/CircleCard.svelte";
// import module
import { LinkType, type LibInfo } from "../../components/svelte/type";
// import media
import CarouselGif from "../../../../public/img/CircleCarCut.webm";
const lib = new Map<number, LibInfo>([
  [
    0,
    {
      titre: "Carousel en cercle",
      logo: ["svelte", "react"],
      description:
        "Le composant gère automatiquement le passage d'une image à l'autre avec un effet de fondu circulaire, en ajustant les dimensions et la position des images.",
      linkBox: [
        [
          {
            type: LinkType.GitHub,
            link: "https://github.com/SalvadorGriaule/CarouselCircle",
          },
        ],

        [
          {
            type: LinkType.GitHub,
            link: "https://github.com/SalvadorGriaule/CircleCarouselReact",
          },
        ],
      ],
      media: { type: "vidéo", link: CarouselGif },
    },
  ],
  [
    1,
    {
      titre: "Uploader en Drag and Drop",
      logo: ["svelte", "vuejs"],
      description:
        "Ce composant est un Dropzone personnalisé permettant le téléchargement de fichiers avec plusieurs fonctionnalités avancées.",
      linkBox: [
        [
          {
            type: LinkType.GitHub,
            link: "https://github.com/SalvadorGriaule/FileUploader",
          },
        ],
      ],
      media: { type: "image", link: "" },
    },
  ],
]);
---

<Layout>
  <div class="bg-linear-to-br from-slate-600 to-slate-900 h-full">
    <HeaderNav />
    <LibraryPage client:load lib={lib} />
    <div id="0" class="showcard w-screen hidden">
      <ShowCardLibrary
        client:load
        title={lib.get(0)!.titre}
        description={lib.get(0)!.description}
        fw={lib.get(0)!.logo}
        linkSlice={lib.get(0)!.linkBox}
      >
        <CircleCard client:load />
      </ShowCardLibrary>
    </div>
  </div>

  <script>
    import { currentSelect } from "../../assets/ts/nano";

    const makeVisible = (bool: boolean, div: HTMLElement | null) => {
      if (div && bool) {
        div.classList.add("block");
        div.classList.remove("hidden");
      } else if (div) {
        div.classList.add("hidden");
        div.classList.remove("block");
      }
    };

    const showcard = document.querySelectorAll(".showcard");

    currentSelect.subscribe((val) => {
      for (let elem of showcard) {
        makeVisible(val == Number(elem.id), document.getElementById(elem.id));
      }
    });
  </script>
</Layout>
